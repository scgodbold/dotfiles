" Config for vim
"
" Author: Scott Godbold
"
" -----------------------------------------------------------------------

" Table of Contents                                            *contents*

"   01. Plugin Settings ................................. |plugin_config|
"   02. Colors ........................................... |color_scheme|
"   03. Tabs and Spaces ................................... |tabs_spaces|
"   04. UI Configuration .................................... |ui_config|
"   05. Searching ....................................... |search_config|
"   06. Folding ........................................ |folding_config|
"   07. Key Bindings ........................................ |key_binds|
"   08. Backups & Undos ................................. |backups_undos|

" -----------------------------------------------------------------------
" 01. Plugin Settings                                     *plugin_config*
" -----------------------------------------------------------------------
" download vim-plug if missing
if empty(glob('~/.vim/autoload/plug.vim'))
    silent! execute '!curl --create-dirs -fsSLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim'
    augroup pluginstaller
        autocmd VimEnter * silent! PlugInstall
    augroup END
endif

call plug#begin('~/.vim/plugged')    		" Define plugins

" Plug 'w0ng/vim-hybrid'                    " My fallback colorscheme, always a good choice
Plug 'alessandroyorba/sierra'               " Sierra colors, the new hotness
Plug 'nightsense/vimspectr'
Plug 'itchyny/lightline.vim'                " A lighter status line than airline
Plug 'christoomey/vim-tmux-navigator'       " Make vim and tmux play together
Plug 'nathanaelkane/vim-indent-guides'      " This should help me view the indent levels
Plug 'tpope/vim-fugitive'                   " Need git access from vim
Plug 'tpope/vim-vinegar'                    " File navigation
Plug 'tpope/vim-commentary'                 " File navigation
Plug 'tpope/vim-dispatch'                   " File navigation
Plug 'tpope/vim-eunuch'                     " File navigation

" Filetype specific plugins
Plug 'hashivim/vim-terraform', { 'for': 'terraform' }                " Terraform formating
Plug 'fatih/vim-go', { 'for': 'go'}                                  " Support go development
Plug 'saltstack/salt-vim', { 'for': 'sls' }                          " Enable salt support
Plug 'leafgarland/typescript-vim', { 'for': 'typescript' }           " Typescript support

call plug#end()   				            " end vundle managed plugins

" Autoformat terrform files on save
let g:terraform_fmt_on_save=1
let g:terraform_align=1

" Local Vim environment uses this to tell it to build on write
let g:autocheck_onwrite = 1

" -----------------------------------------------------------------------
" 02. Colors                                               *color_scheme*
" -----------------------------------------------------------------------
set background=dark		                " All about the dark terminals
syntax enable			                " Enable Syntax Highlighting
silent! colorscheme sierra              " our colorscheme definition

" This sets opacity to match the terminal settings
hi Normal ctermbg=none
hi NonText ctermbg=none

" Fade text on unfocused windows
if has('nvim-0.2.2')
   hi NormalNC ctermfg=darkgray
endif

" Set lightline colorscheme
let g:lightline = {
            \ 'colorscheme': 'wombat',
            \ }

" -----------------------------------------------------------------------
" 03. Tabs & Spaces                                         *tabs_spaces*
" -----------------------------------------------------------------------
set tabstop=4			" 4 spaces == 1 tab
set softtabstop=4		" number of spaces added/removed while editing
set shiftwidth=4		" Sets spaces shifted when using [<<] or [>>]
set expandtab			" Tabs are now spaces pahhh
set smarttab            " Smart tab handling for indenting
set smartindent         " ^ See above

" Delete all the things
set backspace+=eol      " end of lines
set backspace+=indent   " autoindent tabs
set backspace+=start    " the start of current insertion

" Vim Indent Guides, useful for python and stuff
let g:indent_guides_auto_colors = 0                             " No Auto Color Detection
let g:indent_guides_guide_size = 1                              " Thin guides
augroup indentguides
    autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=238  " Declare custom even line color
    autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=240 " Declare custom odd line color
augroup END
let g:indent_guides_enable_on_vim_startup = 1                   " Lets have this on by default, <leader>ig to disable

" Strip away trailing whitespace from all files
augroup stripwhitespace
    autocmd BufWritePre * :%s/\s\+$//e
augroup END

" -----------------------------------------------------------------------
" 04. UI Configuration                                        *ui_config*
" -----------------------------------------------------------------------
set number			                " show line numbers
set scrolloff=5                     " keep 5 lines from the edge of the screen
set cursorline                      " horizontal line showing me where I am cause I am stupid
set showcmd                         " show the commands you are giving in the bottom right
filetype indent on                  " Filetype specific indenting
set lazyredraw                      " speed up the macros????
set showmatch                       " highlights matching pairs of: [{()}]
set splitright                      " vert splits open to the right
set splitbelow                      " horizontal splits open below
set laststatus=2                    " Make our lightline visible always

" -----------------------------------------------------------------------
" 05. Searching                                           *search_config*
" -----------------------------------------------------------------------
set incsearch                       " search as characters get entered
set hlsearch                        " highlight matches
set ignorecase                      " case insensitive searching
set smartcase                       " unless we want case

" Ignore files in gitignore and use silver searcher if able
if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor
endif

" -----------------------------------------------------------------------
" 06. Folding                                            *folding_config*
" -----------------------------------------------------------------------
set foldenable          " I want to fold
set foldlevelstart=5    " Show most of the folds to begin with
set foldlevel=99        " Gimme all dem folds
set foldmethod=indent   " Fold on indent levels

" -----------------------------------------------------------------------
" 07. Key Bindings                                            *key_binds*
" -----------------------------------------------------------------------
let mapleader=' '

" move visually vertically not by line by default
nnoremap <expr> j v:count ? (v:count > 5 ? "m'" . v:count : '') . 'j' : 'gj'
nnoremap <expr> k v:count ? (v:count > 5 ? "m'" . v:count : '') . 'k' : 'gk'

" Highlight last inserted text
nnoremap gV `[v`]

" remaping : to ; and save all the keystrokes
nnoremap ; :

" Remove command window, I dont find it useful for my work flow
nnoremap q: :q

" toggle showing hidden charecters
nnoremap <leader>l :setlocal list! list?<CR>

" sources vim
nnoremap <leader>R :source $MYVIMRC<CR>

" toggles line numbers showing
nnoremap <leader>n :setlocal number! number?<CR>

" toggles paste mode
nnoremap <leader>P :setlocal paste! paste?<CR>


" Allow for <leader>\ and <leader>- to open vimsplits
nnoremap <leader>\ :vsplit<CR>
nnoremap <leader>- :split<CR>

" Unhighlight the bits if we be done
nnoremap <leader>c :nohlsearch<CR>

" Make folding and unfolding easier w/ space
nnoremap <leader>f za

" Show marks
nnoremap <leader>m :marks<CR>

" Show registers
nnoremap <leader>r :registers<CR>

" Show current filetype
nnoremap <leader>T :setlocal filetype?<CR>

" Change current directory to current files directory
nnoremap <leader>g :cd %:h<CR>:pwd<CR>

" Rebalance Vim splits, sometimes zoom can leave it in a funky state
nnoremap <leader>= <C-W>=

" Some tag niceities
" Show preview of matching tag
nnoremap <leader>p <C-w>}
" jump to matching tag pushing previous spot onto the stack
nnoremap <leader>v <C-]>
" jump up the tag stack 1 position
nnoremap <leader>b <C-t>
" Close preview window
nnoremap <leader>x <C-w>z

" -----------------------------------------------------------------------
" 08. Backups & Undos                                     *backups_undos*
" -----------------------------------------------------------------------
set backupdir=~/.vim/cache/backup//
set undodir=~/.vim/cache/undo//
set directory=~/.vim/cache/swap//


set undofile                " persistent undo == $$$$
let undolevels=500          " undo all the things
let undoreload=500          " and the reload
